{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar StudentData = function StudentData() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var showdata = function showdata() {\n    var response, sdata;\n    return _regeneratorRuntime.async(function showdata$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('StudentsData.txt'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.text());\n\n          case 6:\n            sdata = _context.sent;\n\n            if (!(sdata[1].value === \"R\")) {\n              _context.next = 10;\n              break;\n            }\n\n            console.log(sdata[1]);\n            return _context.abrupt(\"return\", setData(sdata[1]));\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n\n            (function (error) {\n              console.log(\"error\");\n              console.error(error);\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n\n  return _jsx(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    data: data,\n    renderItem: showdata\n  });\n};\n\nexport default StudentData;","map":{"version":3,"names":["React","useState","useEffect","StudentData","data","setData","showdata","fetch","response","text","sdata","value","console","log","error","item"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/screens/StudentData.js"],"sourcesContent":["import { View, Text, Button, FlatList } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst StudentData = () => {\n    const [data, setData] = useState(\"\");\n\n    let showdata = async () => {\n        try {\n            const response = await fetch('StudentsData.txt');\n            const sdata = await response.text();\nif(sdata[1].value===\"R\"){\n    console.log(sdata[1]);\n\n    return setData(sdata[1]);\n\n}\n}\n           \n        //setData(sdata);\n        catch {\n            (error => {\n                console.log(\"error\");\n                console.error(error);\n            })\n        }\n    }\n            return (\n                <FlatList\n                    keyExtractor={(item) => item}\n                    data={data}\n                    renderItem={showdata}\n                />\n            );\n        };\n\n        export default StudentData;\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACtB,gBAAwBF,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOG,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAIC,QAAQ,GAAG,SAAXA,QAAW;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEgBC,KAAK,CAAC,kBAAD,CAFrB;;UAAA;YAEDC,QAFC;YAAA;YAAA,iCAGaA,QAAQ,CAACC,IAAT,EAHb;;UAAA;YAGDC,KAHC;;YAAA,MAIhBA,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,KAAiB,GAJD;cAAA;cAAA;YAAA;;YAKfC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAAC,CAAD,CAAjB;YALe,iCAORL,OAAO,CAACK,KAAK,CAAC,CAAD,CAAN,CAPC;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAcP,CAAC,UAAAI,KAAK,EAAI;cACNF,OAAO,CAACC,GAAR,CAAY,OAAZ;cACAD,OAAO,CAACE,KAAR,CAAcA,KAAd;YACH,CAHD;;UAdO;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAf;;EAoBQ,OACI,KAAC,QAAD;IACI,YAAY,EAAE,sBAACC,IAAD;MAAA,OAAUA,IAAV;IAAA,CADlB;IAEI,IAAI,EAAEX,IAFV;IAGI,UAAU,EAAEE;EAHhB,EADJ;AAOH,CA9BT;;AAgCQ,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}