{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar StudentData = function StudentData() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var showdata = function showdata() {\n    var response, sdata;\n    return _regeneratorRuntime.async(function showdata$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('StudentsData.txt'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.text());\n\n          case 5:\n            sdata = _context.sent;\n\n            if (sdata.value == \"Ruby\") {\n              console.log(sdata);\n              setData(sdata);\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: showdata\n    })\n  });\n};\n\nexport default StudentData;","map":{"version":3,"names":["React","useState","useEffect","StudentData","data","setData","showdata","fetch","response","text","sdata","value","console","log"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/screens/StudentData.js"],"sourcesContent":["import { View, Text, Button } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst StudentData = () => {\n    const [data, setData] = useState(\"\");\n\n    let showdata = async () => {\n\n        const response = await fetch('StudentsData.txt');\n        const sdata = await response.text();\n        if(sdata.value==\"Ruby\"){\n            console.log(sdata);\n            setData(sdata);\n        }\n        //setData(sdata);\n        \n    }/* catch {\n            (error => {\n                console.log(\"error\");\n                console.error(error);\n                console.log(data);\n            }) */\n\n    return (\n        <View>\n        \n            <Text>{showdata}</Text>\n            \n               \n        \n        </View>\n    );\n};\n\nexport default StudentData;\n"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACtB,gBAAwBF,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOG,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAIC,QAAQ,GAAG,SAAXA,QAAW;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCAEYC,KAAK,CAAC,kBAAD,CAFjB;;UAAA;YAELC,QAFK;YAAA;YAAA,iCAGSA,QAAQ,CAACC,IAAT,EAHT;;UAAA;YAGLC,KAHK;;YAIX,IAAGA,KAAK,CAACC,KAAN,IAAa,MAAhB,EAAuB;cACnBC,OAAO,CAACC,GAAR,CAAYH,KAAZ;cACAL,OAAO,CAACK,KAAD,CAAP;YACH;;UAPU;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAf;;EAiBA,OACI,KAAC,IAAD;IAAA,UAEI,KAAC,IAAD;MAAA,UAAOJ;IAAP;EAFJ,EADJ;AASH,CA7BD;;AA+BA,eAAeH,WAAf"},"metadata":{},"sourceType":"module"}