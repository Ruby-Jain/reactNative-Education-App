{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport Users from \"../api/usersapi\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchStu = function SearchStu(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchStud = _useState2[0],\n      setSearchStud = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredData = _useState4[0],\n      setFilteredData = _useState4[1];\n\n  return _jsxs(View, {\n    style: {\n      paddingVertical: 5,\n      width: 410,\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      elevation: 5,\n      borderRadius: 15,\n      backgroundColor: \"white\"\n    },\n    children: [_jsx(TextInput, {\n      style: {\n        left: 5,\n        position: \"relative\",\n        width: 369,\n        backgroundColor: \"#e1e1e2\",\n        fontWeight: \"bold\",\n        borderRadius: 10,\n        fontSize: 18,\n        letterSpacing: 2\n      },\n      placeholder: \"  \\uD83D\\uDD0D  Search Student\",\n      onChangeText: function onChangeText(text) {\n        setSearchStud(text);\n      },\n      I: true\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        Users.filter(function (item) {\n          console.log;\n\n          if (searchStud === \"\") {\n            console.log(\"plz type something to search\");\n          } else if (item.name.includes(searchStud)) {\n            console.log(item.name);\n          }\n        });\n      },\n      children: _jsx(Ionicons, {\n        name: \"md-send\",\n        style: {\n          width: 33,\n          left: 5,\n          position: \"relative\"\n        },\n        size: 32\n      })\n    })]\n  });\n};\n\nexport default SearchStu;","map":{"version":3,"names":["React","useState","Users","Ionicons","SearchStu","props","searchStud","setSearchStud","filteredData","setFilteredData","paddingVertical","width","flexDirection","justifyContent","elevation","borderRadius","backgroundColor","left","position","fontWeight","fontSize","letterSpacing","text","filter","item","console","log","name","includes"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/screens/SearchStu.js"],"sourcesContent":["import {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    FlatList,\n    TextInput,\n    TouchableOpacity,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport Users from \"../api/usersapi\";\nimport { Ionicons } from '@expo/vector-icons';\n\nconst SearchStu = (props) => {\n    const [searchStud, setSearchStud] = useState();\n    const [filteredData, setFilteredData] = useState([]);\n    return (\n        <View style={{\n            paddingVertical: 5,\n            width: 410,\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            elevation: 5,\n            borderRadius: 15,\n            backgroundColor: \"white\"\n        }}>\n\n            <TextInput style={{ left:5,position:\"relative\",width: 369, backgroundColor: \"#e1e1e2\", fontWeight: \"bold\", borderRadius: 10, fontSize: 18, letterSpacing: 2 }}\n                placeholder=\"  🔍  Search Student\"\n\n                //onChangeText={(text) => setValue(text)}\n                onChangeText={(text) => {\n                    setSearchStud(text);\n                }}\n                I />\n\n            <TouchableOpacity onPress={() => {\n  /* ask */     Users.filter((item) => {\n      console.log\n                if (searchStud === \"\") {\n                     console.log(\"plz type something to search\")\n                } else if ( item.name.includes(searchStud)) {\n                   console.log(item.name)\n                }\n            })\n            }}>\n                <Ionicons name=\"md-send\" style={{width:33,left:5,position:\"relative\"}} size={32} />\n            </TouchableOpacity>\n\n        </View>\n    )\n}\nexport default SearchStu;"],"mappings":";;;;;;;;AASA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;EACzB,gBAAoCJ,QAAQ,EAA5C;EAAA;EAAA,IAAOK,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAwCN,QAAQ,CAAC,EAAD,CAAhD;EAAA;EAAA,IAAOO,YAAP;EAAA,IAAqBC,eAArB;;EACA,OACI,MAAC,IAAD;IAAM,KAAK,EAAE;MACTC,eAAe,EAAE,CADR;MAETC,KAAK,EAAE,GAFE;MAGTC,aAAa,EAAE,KAHN;MAITC,cAAc,EAAE,cAJP;MAKTC,SAAS,EAAE,CALF;MAMTC,YAAY,EAAE,EANL;MAOTC,eAAe,EAAE;IAPR,CAAb;IAAA,WAUI,KAAC,SAAD;MAAW,KAAK,EAAE;QAAEC,IAAI,EAAC,CAAP;QAASC,QAAQ,EAAC,UAAlB;QAA6BP,KAAK,EAAE,GAApC;QAAyCK,eAAe,EAAE,SAA1D;QAAqEG,UAAU,EAAE,MAAjF;QAAyFJ,YAAY,EAAE,EAAvG;QAA2GK,QAAQ,EAAE,EAArH;QAAyHC,aAAa,EAAE;MAAxI,CAAlB;MACI,WAAW,EAAC,gCADhB;MAII,YAAY,EAAE,sBAACC,IAAD,EAAU;QACpBf,aAAa,CAACe,IAAD,CAAb;MACH,CANL;MAOI,CAAC;IAPL,EAVJ,EAmBI,KAAC,gBAAD;MAAkB,OAAO,EAAE,mBAAM;QAC7BpB,KAAK,CAACqB,MAAN,CAAa,UAACC,IAAD,EAAU;UACjCC,OAAO,CAACC,GAAR;;UACU,IAAIpB,UAAU,KAAK,EAAnB,EAAuB;YAClBmB,OAAO,CAACC,GAAR,CAAY,8BAAZ;UACJ,CAFD,MAEO,IAAKF,IAAI,CAACG,IAAL,CAAUC,QAAV,CAAmBtB,UAAnB,CAAL,EAAqC;YACzCmB,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;UACF;QACJ,CAPG;MAQH,CATD;MAAA,UAUI,KAAC,QAAD;QAAU,IAAI,EAAC,SAAf;QAAyB,KAAK,EAAE;UAAChB,KAAK,EAAC,EAAP;UAAUM,IAAI,EAAC,CAAf;UAAiBC,QAAQ,EAAC;QAA1B,CAAhC;QAAuE,IAAI,EAAE;MAA7E;IAVJ,EAnBJ;EAAA,EADJ;AAmCH,CAtCD;;AAuCA,eAAed,SAAf"},"metadata":{},"sourceType":"module"}