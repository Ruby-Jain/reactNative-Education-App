{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState } from \"react\";\nimport Users from \"../api/usersapi\";\nimport Search from \"./Search\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Header } from \"react-native/Libraries/NewAppScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserData2 = function UserData2(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setVal = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchStu = _useState4[0],\n      setSearchStu = _useState4[1];\n\n  var userCard = function userCard(_ref2) {\n    var item = _ref2.item;\n\n    var stulink = require(\"../api/usersapi\");\n\n    return _jsxs(View, {\n      style: styles.mainContainer,\n      children: [_jsxs(View, {\n        style: {\n          paddingVertical: 5,\n          width: 410,\n          right: 7,\n          position: \"relative\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          elevation: 5,\n          borderRadius: 15,\n          backgroundColor: \"white\"\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            width: 365,\n            backgroundColor: \"#e1e1e2\",\n            borderRadius: 10,\n            fontSize: 18,\n            letterSpacing: 2\n          },\n          placeholder: \"  \\uD83D\\uDD0D  Search Student\",\n          value: val,\n          onChange: function onChange(event) {\n            setVal(event.target.value);\n          },\n          I: true\n        }, id), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            Users.filter(function (item) {\n              if (item.id === searchStu.value) {\n                return setSearchStu(item);\n              }\n            }).map(function (item, id) {\n              return _jsxs(View, {\n                style: styles.userContainer,\n                children: [_jsx(View, {\n                  children: _jsx(Image, {\n                    style: styles.cardImage,\n                    source: item.image\n                  })\n                }), _jsxs(Text, {\n                  style: styles.mainHeader,\n                  children: [\"ID: \", item.id]\n                }), _jsxs(Text, {\n                  style: styles.mainHeader,\n                  children: [\"NAME: \", item.name]\n                }), _jsx(Text, {\n                  style: styles.biodata,\n                  children: \"BIODATA\"\n                }), _jsx(Text, {\n                  style: styles.description,\n                  children: item.description\n                }), _jsxs(Text, {\n                  style: styles.enroll,\n                  children: [\"COURSE ENROLLED: \", item.courseenroll]\n                })]\n              });\n            });\n          },\n          children: _jsx(Ionicons, {\n            name: \"md-send\",\n            size: 32\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.userContainer,\n        children: [_jsx(View, {\n          children: _jsx(Image, {\n            style: styles.cardImage,\n            source: item.image\n          })\n        }), _jsxs(Text, {\n          style: styles.mainHeader,\n          children: [\"NAME: \", item.name]\n        }), _jsx(Text, {\n          style: styles.biodata,\n          children: \"BIODATA\"\n        }), _jsx(Text, {\n          style: styles.description,\n          children: item.description\n        }), _jsxs(Text, {\n          style: styles.enroll,\n          children: [\"COURSE ENROLLED: \", item.courseenroll]\n        })]\n      })]\n    });\n  };\n\n  return _jsx(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    data: Users,\n    renderItem: userCard\n  });\n};\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    backgroundColor: \"#FFD700\",\n    paddingHorizontal: 10,\n    color: \"black\"\n  },\n  userContainer: {\n    backgroundColor: \"#F0E68C\",\n    textAlign: \"center\",\n    borderRadius: 50,\n    borderColor: \"black\",\n    borderWidth: 5\n  },\n  cardImage: {\n    width: 345,\n    padding: 5,\n    alignSelf: \"center\",\n    borderRadius: 50,\n    height: 390,\n    borderColor: \"black\",\n    borderBottomWidth: 4\n  },\n  mainHeader: {\n    paddingTop: 10,\n    fontSize: 25,\n    color: \"black\",\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  subHeader: {\n    fontSize: 18,\n    color: \"#344055\",\n    textTransform: \"uppercase\",\n    fontWeight: \"500\",\n    paddingTop: 20,\n    textAlign: \"center\"\n  },\n  biodata: {\n    fontSize: 22,\n    color: \"black\",\n    fontWeight: \"bold\",\n    paddingTop: 20,\n    textAlign: \"center\"\n  },\n  enroll: {\n    fontWeight: \"bold\",\n    color: \"black\",\n    fontSize: 18,\n    textAlign: \"center\",\n    paddingBottom: 30\n  },\n  description: {\n    textAlign: \"center\",\n    fontSize: 16,\n    color: \"#7d7d7d\",\n    paddingTop: 20,\n    paddingBottom: 30,\n    lineHeight: 15\n  }\n});\nexport default UserData2;","map":{"version":3,"names":["React","useState","Users","Search","Ionicons","Header","UserData2","navigation","route","val","setVal","searchStu","setSearchStu","userCard","item","stulink","require","styles","mainContainer","paddingVertical","width","right","position","flexDirection","justifyContent","elevation","borderRadius","backgroundColor","fontSize","letterSpacing","event","target","value","id","filter","map","userContainer","cardImage","image","mainHeader","name","biodata","description","enroll","courseenroll","StyleSheet","create","paddingHorizontal","color","textAlign","borderColor","borderWidth","padding","alignSelf","height","borderBottomWidth","paddingTop","textTransform","fontWeight","subHeader","paddingBottom","lineHeight"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/screens/UserData2.js"],"sourcesContent":["import {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    FlatList,\n    TextInput,\n    TouchableOpacity,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport Users from \"../api/usersapi\";\nimport Search from \"./Search\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Header } from \"react-native/Libraries/NewAppScreen\";\n\nconst UserData2 = ({ navigation, route }) => {\n\n    const [val, setVal] = useState(\"\");\n    const [searchStu, setSearchStu] = useState();\n\n    const userCard = ({ item }) => {\n\n        const stulink = require('../api/usersapi');\n\n\n        return (\n            <View style={styles.mainContainer}>\n\n                <View style={{\n                    paddingVertical: 5,\n                    width: 410,\n                    right: 7,\n                    position: \"relative\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\",\n                    elevation: 5,\n                    borderRadius: 15,\n                    backgroundColor: \"white\"\n                }}>\n\n                    <TextInput style={{ width: 365, backgroundColor: \"#e1e1e2\", borderRadius: 10, fontSize: 18, letterSpacing: 2 }}\n                        placeholder=\"  🔍  Search Student\"\n                        value={val}\n                        key={id}\n                        //onChangeText={(text) => setValue(text)}\n                        onChange={(event) => {\n                            setVal(event.target.value);\n\n                        }}\n                        I />\n\n                    <TouchableOpacity onPress={() => {\n          /* ask */     Users.filter((item) => {\n                        if (item.id === searchStu.value) {\n                            return setSearchStu(item)\n                        }\n                    }).map((item, id) => {\n                        return (\n                            <View style={styles.userContainer}>\n                                <View>\n                                    <Image\n                                        style={styles.cardImage}\n                                        source={item.image}\n                                    />\n                                </View>\n                                <Text style={styles.mainHeader}>ID: {item.id}</Text>\n                                <Text style={styles.mainHeader}>NAME: {item.name}</Text>\n                                <Text style={styles.biodata}>BIODATA</Text>\n                                <Text style={styles.description}>{item.description}</Text>\n                                <Text style={styles.enroll}>\n                                    COURSE ENROLLED: {item.courseenroll}\n                                </Text>\n                            </View>\n                        );\n                    })\n                    }}>\n                        <Ionicons name=\"md-send\" size={32} />\n                    </TouchableOpacity>\n\n                </View>\n\n                <View style={styles.userContainer}>\n                    <View>\n                        <Image\n                            style={styles.cardImage}\n                            source={item.image}\n                        />\n                    </View>\n                    <Text style={styles.mainHeader}>NAME: {item.name}</Text>\n                    <Text style={styles.biodata}>BIODATA</Text>\n                    <Text style={styles.description}>{item.description}</Text>\n                    <Text style={styles.enroll}>\n                        COURSE ENROLLED: {item.courseenroll}\n                    </Text>\n                </View>\n            </View>\n        );\n    };\n    return (\n        <FlatList\n            keyExtractor={(item) => item.id}\n            data={Users}\n            renderItem={userCard}\n        />\n    );\n};\n\n\n\n// !todo style the user1 and make it uppercase\n\nconst styles = StyleSheet.create({\n    mainContainer: {\n        backgroundColor: \"#FFD700\",\n        paddingHorizontal: 10,\n        color: \"black\",\n    },\n    userContainer: {\n        // height: \"50%\",\n        // display: \"flex\",\n        backgroundColor: \"#F0E68C\",\n        textAlign: \"center\",\n        borderRadius: 50,\n        borderColor: \"black\",\n        borderWidth: 5,\n    },\n    cardImage: {\n        width: 345,\n        padding: 5,\n        alignSelf: \"center\",\n        borderRadius: 50,\n        height: 390,\n        borderColor: \"black\",\n        borderBottomWidth: 4,\n    },\n\n    mainHeader: {\n        paddingTop: 10,\n        fontSize: 25,\n        color: \"black\",\n        textTransform: \"uppercase\",\n        fontWeight: \"bold\",\n\n        textAlign: \"center\",\n    },\n    subHeader: {\n        fontSize: 18,\n        color: \"#344055\",\n        textTransform: \"uppercase\",\n        fontWeight: \"500\",\n        paddingTop: 20,\n        textAlign: \"center\",\n    },\n    biodata: {\n        fontSize: 22,\n        color: \"black\",\n        fontWeight: \"bold\",\n        paddingTop: 20,\n        textAlign: \"center\",\n    },\n\n    enroll: {\n        fontWeight: \"bold\",\n        color: \"black\",\n        fontSize: 18,\n        textAlign: \"center\",\n        paddingBottom: 30,\n    },\n\n    description: {\n        textAlign: \"center\",\n        fontSize: 16,\n        color: \"#7d7d7d\",\n        paddingTop: 20,\n        paddingBottom: 30,\n\n        lineHeight: 15,\n    },\n});\n\nexport default UserData2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}