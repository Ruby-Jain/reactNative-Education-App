{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState, useEffect } from \"react\";\nimport { SearchBar } from \"react-native-elements\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StudentData = function StudentData() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      setSearchText = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var renderHeader = function renderHeader(text) {\n    return _jsx(SearchBar, {\n      placeholder: \"Search Text Data\",\n      darkTheme: true,\n      round: true,\n      editable: true,\n      value: text,\n      onChangeText: function onChangeText(text) {\n        return text;\n      }\n    });\n  };\n\n  var getText = function getText() {\n    loading;\n\n    var RNFS = require('react-native-fs');\n\n    var path1 = '../../assets/StudentsData.txt';\n    var path2 = '../../assets/StudentsData2.txt';\n    RNFS.readFile().map().then(function (contents) {\n      var fileContent = contents.text();\n\n      for (var i = 0; i < fileContent.length(); i++) {\n        var text = fileContent.IndexAt(i);\n        console.log(text);\n        setData(text);\n        setLoading(false);\n      }\n    });\n  };\n\n  return _jsx(FlatList, {\n    ListHeaderComponent: renderHeader,\n    data: data,\n    renderItem: function renderItem() {\n      return _jsxs(View, {\n        children: [_jsx(ActivityIndicator, {\n          size: \"small\",\n          color: \"#0000ff\"\n        }), _jsx(Text, {\n          children: getText\n        })]\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    }\n  });\n};\n\nexport default StudentData;","map":{"version":3,"names":["React","useState","useEffect","SearchBar","StudentData","data","setData","searchText","setSearchText","loading","setLoading","renderHeader","text","getText","RNFS","require","path1","path2","readFile","map","then","contents","fileContent","i","length","IndexAt","console","log","item"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/screens/StudentData.js"],"sourcesContent":["import { View, Text, Button, FlatList,ActivityIndicator } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { SearchBar } from \"react-native-elements\";\n//import studentsData from './studentsData.txt';\n//import raw from 'raw.macro';\n\n\nconst StudentData = () => {\n\n    const [data, setData] = useState(\"\");\n    const [searchText, setSearchText] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n\n\n    const renderHeader = (text) => {\n        return (\n            <SearchBar\n                placeholder=\"Search Text Data\"\n                darkTheme\n                round\n                editable={true}\n                value={text}\n                onChangeText={text => text}\n            />\n        )\n    }\n    /* const textdata = require(\"../api/StudentsData.txt\");\n\n    const searchData = (textdata) => {\n        textdata.filter((item) => {\n            if (searchText === \"\") {\n                return console.log(textdata)\n            } else if (item.id.includes(searchStu) || item.name.toLowerCase().includes(searchStu.toLowerCase()) || item.courseenroll.toLowerCase().includes(searchStu.toLowerCase())) {\n                return console.log(item)\n            } */\n\n    /*  RNFS.readFileAssets(path)\n         .then((contents)=>{\n           var contentString=contents.toString();\n         } */\n    const getText = () => {\n        loading\n        var RNFS = require('react-native-fs');\n        var path1 = '../../assets/StudentsData.txt';\n        var path2 = '../../assets/StudentsData2.txt';\n\n        RNFS.readFile().map()\n            .then((contents) => {\n                var fileContent = contents.text();\n                for (var i = 0; i < fileContent.length(); i++) {\n                    var text = fileContent.IndexAt(i);\n                    console.log(text);\n                    setData(text);\n                    setLoading(false);\n                }\n            })\n        \n    }\n            /* if (sdata.value.length() > 0) {\n                console.log(sdata);\n                setData(sdata);\n                setLoading(false);\n            } */\n\n    //setData(sdata);\n    /* catch {\n        (error => {\n            console.log(\"error\");\n            console.error(error);\n        })\n    } */\n\n\n    return (\n        <FlatList\n            ListHeaderComponent={renderHeader}\n            data={data}\n            renderItem={() => {\n                return (\n                    <View>\n                    <ActivityIndicator size=\"small\" color=\"#0000ff\" />\n                        <Text>{getText}</Text>\n                    </View>\n                );\n            }}\n            keyExtractor={item => item}\n        />\n\n    );\n\n\n};\nexport default StudentData;\n"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,uBAA1B;;;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EAEtB,gBAAwBH,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAoCL,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOM,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA8BP,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOQ,OAAP;EAAA,IAAgBC,UAAhB;;EAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;IAC3B,OACI,KAAC,SAAD;MACI,WAAW,EAAC,kBADhB;MAEI,SAAS,MAFb;MAGI,KAAK,MAHT;MAII,QAAQ,EAAE,IAJd;MAKI,KAAK,EAAEA,IALX;MAMI,YAAY,EAAE,sBAAAA,IAAI;QAAA,OAAIA,IAAJ;MAAA;IANtB,EADJ;EAUH,CAXD;;EA0BA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;IAClBJ,OAAO;;IACP,IAAIK,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;IACA,IAAIC,KAAK,GAAG,+BAAZ;IACA,IAAIC,KAAK,GAAG,gCAAZ;IAEAH,IAAI,CAACI,QAAL,GAAgBC,GAAhB,GACKC,IADL,CACU,UAACC,QAAD,EAAc;MAChB,IAAIC,WAAW,GAAGD,QAAQ,CAACT,IAAT,EAAlB;;MACA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACE,MAAZ,EAApB,EAA0CD,CAAC,EAA3C,EAA+C;QAC3C,IAAIX,IAAI,GAAGU,WAAW,CAACG,OAAZ,CAAoBF,CAApB,CAAX;QACAG,OAAO,CAACC,GAAR,CAAYf,IAAZ;QACAN,OAAO,CAACM,IAAD,CAAP;QACAF,UAAU,CAAC,KAAD,CAAV;MACH;IACJ,CATL;EAWH,CAjBD;;EAiCA,OACI,KAAC,QAAD;IACI,mBAAmB,EAAEC,YADzB;IAEI,IAAI,EAAEN,IAFV;IAGI,UAAU,EAAE,sBAAM;MACd,OACI,MAAC,IAAD;QAAA,WACA,KAAC,iBAAD;UAAmB,IAAI,EAAC,OAAxB;UAAgC,KAAK,EAAC;QAAtC,EADA,EAEI,KAAC,IAAD;UAAA,UAAOQ;QAAP,EAFJ;MAAA,EADJ;IAMH,CAVL;IAWI,YAAY,EAAE,sBAAAe,IAAI;MAAA,OAAIA,IAAJ;IAAA;EAXtB,EADJ;AAkBH,CApFD;;AAqFA,eAAexB,WAAf"},"metadata":{},"sourceType":"module"}