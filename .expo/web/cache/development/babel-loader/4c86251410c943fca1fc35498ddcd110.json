{"ast":null,"code":"var initState = {\n  cart: 0\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"ADD_TO_CART\") {\n    return state + action.payload;\n  } else return state;\n};\n\nexport default reducer;","map":{"version":3,"names":["initState","cart","reducer","state","action","type","payload"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/redux/reducers/reducer.js"],"sourcesContent":["const initState = {\n    cart: 0\n}\n\nconst reducer = (state = initState, action) => {\n    if (action.type === \"ADD_TO_CART\") {\n        return state + action.payload\n    }\n    else\n        return state;\n}\n/* const item = action.payload */\n\n/* switch (action.type) {\n     case 'ADD_TO_CART':\n         return {\n             /* const exist = state.find((x) => x.id === item.id)\n              if(exist) {\n                  return state.map((x) =>\n                      x.id === item.id ? { ...x, qty: x.qty + 1 } : x);\n              }else{\n                  const item = action.payload\n                  return\n                      ...state,\n \n                          ...item,\n                          qty: 1 */\n/* ...state,\ncart: [...state.cart, action.payload]\n \n}\ndefault:\nreturn state\n\n}\n\n\n}*/\nexport default reducer;\n"],"mappings":"AAAA,IAAMA,SAAS,GAAG;EACdC,IAAI,EAAE;AADQ,CAAlB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;EAAA,IAA9BC,KAA8B,uEAAtBH,SAAsB;EAAA,IAAXI,MAAW;;EAC3C,IAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;IAC/B,OAAOF,KAAK,GAAGC,MAAM,CAACE,OAAtB;EACH,CAFD,MAII,OAAOH,KAAP;AACP,CAND;;AAkCA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}