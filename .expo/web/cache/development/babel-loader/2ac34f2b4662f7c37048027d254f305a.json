{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nexport var initialState = {\n  cart: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var item = action.payload;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cart: [].concat(_toConsumableArray(state.cart), [action.payload])\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["initialState","cart","reducer","state","action","item","payload","type"],"sources":["/Users/ruby.jain/Documents/WebDevReactNative Projects/ReactNativeProj/onlineEduApp/src/redux/reducers/reducer.js"],"sourcesContent":["\nexport const initialState = {\n    cart: []\n};\n\nconst reducer = (state = initialState, action) => {\n    const item = action.payload\n\n    switch (action.type) {\n        case 'ADD_TO_CART':\n            return {\n                /* const exist = state.find((x) => x.id === item.id)\n                 if(exist) {\n                     return state.map((x) =>\n                         x.id === item.id ? { ...x, qty: x.qty + 1 } : x);\n                 }else{\n                     const item = action.payload\n                     return\n                         ...state,\n \n                             ...item,\n                             qty: 1 */\n                ...state,\n                cart: [...state.cart, action.payload]\n                \n            }\n        default:\n            return state\n\n    }\n\n\n}\nexport default reducer;\n"],"mappings":";;;;;;;AACA,OAAO,IAAMA,YAAY,GAAG;EACxBC,IAAI,EAAE;AADkB,CAArB;;AAIP,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;EAC9C,IAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;;EAEA,QAAQF,MAAM,CAACG,IAAf;IACI,KAAK,aAAL;MACI,uCAYOJ,KAZP;QAaIF,IAAI,+BAAME,KAAK,CAACF,IAAZ,IAAkBG,MAAM,CAACE,OAAzB;MAbR;;IAgBJ;MACI,OAAOH,KAAP;EAnBR;AAwBH,CA3BD;;AA4BA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}